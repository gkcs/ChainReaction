------------------------------------------------------------
@Sayak
Given a singly linked list, determine if it is a palindrome.

Example 1:
Input: 1->2
Output: false

Example 2:
Input: 1->2->2->1
Output: true
-----------------------------------------------------------


/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public boolean isPalindrome(ListNode head) {
        
        ListNode slow=head;
        ListNode fast=head;
        
        while(fast!=null && fast.next!=null)
        {
            fast=fast.next.next;
            slow=slow.next;
        }
        slow=reversed(slow);
        fast=head;
        
        
        while(slow!=null)
        {
            if(slow.val!=fast.val)
            {
                return false;
            }
            slow=slow.next;
            fast=fast.next;
        }
        return true;
        
    }
        public ListNode reversed(ListNode head)
    {
        ListNode pnode=null;
        ListNode nnode=head;
        while(head!=null)
        {
            nnode=nnode.next;
            head.next=pnode;
            pnode=head;
            head=nnode;
        }
        return pnode;
    }
    
}
